@font-face {
  font-display: swap;
  font-family: "Mona Sans";
  font-weight: 200 900;
  src: url("Mona-Sans.woff2") format("woff2-variations");
}

*,
*::before,
*::after {
  transition-duration: var(--time-0);
  transition-timing-function: var(--easing-standard);
}

html {
  --mesh-0-x: 6%;
  --mesh-0-y: 84%;
  --mesh-1-x: 38%;
  --mesh-1-y: 95%;
  --mesh-2-x: 54%;
  --mesh-2-y: 3%;
  --mesh-3-x: 59%;
  --mesh-3-y: 91%;
  --mesh-4-x: 41%;
  --mesh-4-y: 56%;
  --mesh-5-x: 98%;
  --mesh-5-y: 2%;
  --mesh-6-x: 72%;
  --mesh-6-y: 62%;

  border-color: var(--color-figure-more);
  color: var(--color-figure);
  font-family: "Mona Sans", sans-serif;
  font-weight: var(--font-weight-normal);
  line-height: var(--line-height);
  min-height: 100%;
  transition-property: background-color, color;
}

/* Inspired by https://frontendmasters.com/blog/pure-css-halftone-effect-in-3-declarations/ */
html::before,
html::after {
  bottom: 0;
  content: "";
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  z-index: var(--z-index--1);
}
@media (min-width: 66rem) {
  html::before,
  html::after {
    left: var(--nav-width);
  }
}
html::before {
  --dim: var(--space-3);
  --dif: calc(0.5 * var(--dim));
  --rad: radial-gradient(closest-side, #999, #000 67%);

  background:
    var(--rad) 0 0 / var(--dim) var(--dim),
    var(--rad) var(--dif) var(--dif) / var(--dim) var(--dim),
    linear-gradient(0.25turn, #000, #888, #000);
  background-blend-mode: screen, difference;
  filter: contrast(20);
}
html::after {
  background: repeating-radial-gradient(
    circle,
    var(--color-ground),
    var(--color-theme-less),
    var(--color-ground) 50%
  );
  background: radial-gradient(
    circle,
    var(--color-theme-less),
    var(--color-theme-less) 10%,
    var(--color-ground) 49.75%,
    var(--color-theme-less) 50%,
    var(--color-ground) 100%
  );
  mix-blend-mode: lighten;
}
@media (prefers-color-scheme: dark) {
  html::before {
    background: repeating-linear-gradient(0.125turn, #000, #666, #000 10%),
      repeating-radial-gradient(circle, #eee, #000, #eee 2%),
      repeating-conic-gradient(#eee, #000, #eee 10%);
    mix-blend-mode: lighten;
    filter: contrast(6);
  }
  html::after {
    background-image: radial-gradient(
        at var(--mesh-0-x) var(--mesh-0-y),
        var(--color-highlight-0) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-1-x) var(--mesh-1-y),
        var(--color-highlight-1) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-2-x) var(--mesh-2-y),
        var(--color-highlight-2) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-3-x) var(--mesh-3-y),
        var(--color-highlight-3) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-4-x) var(--mesh-4-y),
        var(--color-highlight-4) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-5-x) var(--mesh-5-y),
        var(--color-highlight-5) 0,
        transparent 50%
      ),
      radial-gradient(
        at var(--mesh-6-x) var(--mesh-6-y),
        var(--color-theme-less) 0,
        transparent 50%
      );
    background-color: var(--color-ground);
    mix-blend-mode: darken;
  }
}

::selection {
  background-color: var(--color-highlight-default);
  color: var(--color-figure-more);
}

body {
  font-size: var(--font-size-1);
  margin: 0;
}

main {
  justify-content: center;
  display: flex;
  margin-bottom: var(--quick-nav-height);
}

@media (min-width: 66rem) {
  main {
    padding-left: var(--nav-width);
  }
}

a {
  color: var(--color-theme);
  transition-property: filter, text-decoration-color;
}

a,
button {
  outline-color: var(--color-highlight-default);
}

button {
  /* Includes transition properties used by other buttons */
  transition-property: box-shadow, filter, opacity, scale;
}

button:disabled:not(.pagination__button) {
  filter: grayscale(0.5);
  opacity: 0.75;
}
@media (hover: hover) {
  :where(a, button:not(:disabled):not(:active)):hover {
    filter: brightness(1.25) saturate(1.25) contrast(1.25);
  }
  a:hover {
    text-decoration-color: transparent;
  }
}

:where(a, button:not(:disabled)):active {
  filter: brightness(0.9) saturate(0.9) contrast(1.5);
}
a:active {
  text-decoration-color: transparent;
}

a::-moz-focus-inner {
  border: none;
}

blockquote {
  font-style: italic;
  margin: var(--space-3);
}

blockquote footer {
  font-weight: var(--font-weight-bold);
}

cite {
  font-style: normal;
}

fieldset {
  border-color: var(--color-balance);
  border-radius: var(--border-radius-1);
  border-width: var(--border-width-1);
  margin: var(--space-3) 0;
  padding: var(--space-1) var(--space-2);
  user-select: none;
}

legend {
  font-size: var(--font-size-0);
  font-weight: var(--font-weight-bold);
}

ol,
ul {
  margin: var(--space-1) 0 var(--space-2);
  padding-left: var(--space-3);
}

li {
  margin: var(--space-0) 0;
}

h1,
h2,
h3,
h4 {
  color: var(--color-figure-more);
  font-weight: var(--font-weight-bold);
  margin: var(--space-3) 0 var(--space-0);
  transition-property: color;
}

h1 {
  font-size: var(--font-size-4);
  text-align: center;
}

h2 {
  font-size: var(--font-size-3);
}

h3 {
  font-size: var(--font-size-2);
}

h4 {
  font-size: var(--font-size-1);
}

h1 + h2,
h2 + h3,
h3 + h4 {
  margin-top: 0;
}

hr {
  border-bottom: none;
  border-color: var(--color-balance);
  border-inline: none;
  border-width: var(--border-width-2);
  margin: var(--space-3) 0;
}

p {
  --font-margin-paragraph: var(--space-2) 0;

  margin: var(--font-margin-paragraph);
  margin-top: 0;
}

p + p {
  margin: var(--font-margin-paragraph);
}

input[type="date"]::-webkit-calendar-picker-indicator {
  cursor: pointer;
  opacity: 0.75;
  transition-property: opacity;
}

@media (prefers-color-scheme: dark) {
  input[type="date"]::-webkit-calendar-picker-indicator {
    filter: invert(0.8);
  }
}

@media (hover: hover) {
  input[type="date"]::-webkit-calendar-picker-indicator:hover {
    opacity: 1;
  }
}

:where(input:not([type="checkbox"]), select, textarea) {
  background-color: var(--color-ground-more);
  border-radius: var(--border-radius-1);
  border: var(--border-width-2) solid var(--color-figure-more);
  outline: 0;
  padding: var(--space-1);
  transition-property: background-color, border, box-shadow;
}

:where(input:not([type="checkbox"]), select, textarea):focus {
  border-color: var(--color-theme-less);
  box-shadow: var(--box-shadow-input-focus);
}

@media (hover: hover) {
  :where(input:not([type="checkbox"]), select, textarea):hover {
    border-color: var(--color-theme-less);
  }
}

:where(input:not([type="checkbox"]), select, textarea)[aria-invalid="true"] {
  border-color: var(--color-negative);
  box-shadow: none;
}

small {
  color: var(--color-figure-less);
  font-size: var(--font-size-0);
}

b,
strong {
  color: var(--color-figure-more);
  font-weight: var(--font-weight-bold);
}

img {
  border-radius: var(--border-radius-1);
  display: block;
  margin: var(--space-3) auto;
  max-width: 80%;
}

table {
  border-spacing: 0;
  margin: var(--space-2) auto;
  text-align: end;
}

td,
th {
  padding: var(--space-0) calc(var(--space-3) / 2);
}

th {
  border-bottom: var(--border-width-2) solid var(--color-figure-more);
  font-weight: var(--font-weight-bold);
}

:where(td, th):first-child {
  text-align: start;
}

tr:not(:last-child) td {
  border-bottom: var(--border-width-0) solid var(--color-figure-more);
}

dialog {
  animation-duration: var(--time-1);
  animation-name: fade-in, scale-in;
  animation-timing-function: var(--easing-decelerate);
  background-color: var(--color-ground);
  border: none;
  color: inherit;
  max-height: calc(100vh - 2 * var(--space-3));
  max-width: min(var(--break-point), calc(100vw - 2 * var(--space-3)));
}
dialog[data-closing] {
  animation-name: fade-out, scale-out;
}

dialog::backdrop {
  animation-duration: var(--time-1);
  animation-name: fade-in;
  animation-timing-function: var(--easing-decelerate);
  backdrop-filter: blur(var(--space-0));
  background: light-dark(
    linear-gradient(
      calc(21turn / 32),
      hsla(210, 25%, 15%, 0.75),
      hsla(210, 25%, 10%, 0.75)
    ),
    linear-gradient(
      calc(21turn / 32),
      hsla(210, 25%, 25%, 0.75),
      hsla(210, 25%, 20%, 0.75)
    )
  );
}
dialog[data-closing]::backdrop {
  animation-name: fade-out;
}
